(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{520:function(t,e,a){"use strict";a.r(e);var s=a(4),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"vue-组件通讯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-组件通讯"}},[t._v("#")]),t._v(" vue 组件通讯")]),t._v(" "),a("h3",{attrs:{id:"父子组件通讯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#父子组件通讯"}},[t._v("#")]),t._v(" 父子组件通讯")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('父组件：\n<scroll class="wrapper" :pullup="pullup" @pullup="more" ></scroll>\n\n子组件：\n  props:{\n    pullup:{type: Boolean,\n              default: true\n      }\n  }\n\n\nthis.$emit(\'pullup\'，“12”)\n//子组件给父组件传值，通过自定义函数，父组件的中绑定的@pullup="more"直接触发more(value)方法,\n')])])]),a("h3",{attrs:{id:"兄弟组件通讯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#兄弟组件通讯"}},[t._v("#")]),t._v(" 兄弟组件通讯")]),t._v(" "),a("p",[t._v("兄弟组件通讯在不适用 vuex 的情况下可以使用 busEvent 的方式进行\n首先创建 bus.js 内容如下：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" //兄弟组件通讯总线\nimport Vue from 'vue'\nexport default new Vue;\n")])])]),a("p",[t._v("然后在需要通讯的组件中引入 bus.js")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("import Bus from '@/components/base/bus'\n")])])]),a("p",[t._v("例子：组件 A---\x3e组件 B\n组件 a 中：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("Bus.$emit('msg', '兄弟数据')\n")])])]),a("p",[t._v("这里就是创建了一个 msg 的自定义事件\n组件 B：\n组件 B 去监听这个 msg 的自定义事件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("Bus.$on('msg', msg => console.info(msg)  //兄弟数据)\n")])])]),a("h3",{attrs:{id:"使用-vuex-进行数据管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-vuex-进行数据管理"}},[t._v("#")]),t._v(" 使用 vuex 进行数据管理")]),t._v(" "),a("p",[t._v("首先我们看下 vuex 的文件结构以及他们是干什么的")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("actions.js                   //Action 类似于 mutation\ngetters.js                  //相当于vue中的computed计算属性\nindex.js                    //统一管理vuex中的 action mutation getter state 对外 export\nmutation-types.js           //定义了所有一些常量，对整个 app 包含的 mutation有一个统一的规划\nmutations.js                //定义了所有的mutation方法的实现\nstate.js     //vuex中的数据源，所有的数据都必须在state里\n")])])]),a("p",[t._v("使用 vuex 的原因应该都是想对数据进行统一的管理，减少各种状态和数据在组件之间传递的繁琐。")]),t._v(" "),a("h3",{attrs:{id:"_1-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-state"}},[t._v("#")]),t._v(" 1：state")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('const state = {\n  keyword : ""\n}\nexport default state\n')])])]),a("p",[t._v("这里我们定义了一个 keyword 关键字，并把它的初始值设置为空")]),t._v(" "),a("p",[t._v("在 vue 组件中我们可以这样去取出这个值")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(" this.$store.state.keyword\n")])])]),a("h3",{attrs:{id:"_2-getter-其实就是-vuex-中的计算属性可以对-state-的值进行相应的处理然后再取出。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-getter-其实就是-vuex-中的计算属性可以对-state-的值进行相应的处理然后再取出。"}},[t._v("#")]),t._v(" 2：getter 其实就是 vuex 中的计算属性可以对 state 的值进行相应的处理然后再取出。")]),t._v(" "),a("h3",{attrs:{id:"_3-mutation-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-mutation-types"}},[t._v("#")]),t._v(" 3：mutation-types")]),t._v(" "),a("p",[t._v("使用常量替代 mutation 事件类型在各种 Flux 实现中是很常见的模式。这样可以使 linter 之类的工具发挥作用，同时把这些常量放在单独的文件中可以让你的代码合作者对整个 app 包含的 mutation 一目了然")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("export const SET_KEYWORD = 'SET_KEYWORD';//搜索关键字\n")])])]),a("h3",{attrs:{id:"_4-mutation-定义了修改-state-中的值得方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-mutation-定义了修改-state-中的值得方法"}},[t._v("#")]),t._v(" 4：mutation 定义了修改 state 中的值得方法")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("//这里只是接受传过来的keyword,将他赋值给state。\nimport {SET_KEYWORD} from './mutation-types';\nconst mutations = {\n  [SET_KEYWORD](state, keyword) {\n    state.keyword = keyword;\n  }\n};\nexport default mutations;\n")])])]),a("p",[t._v("在 vue 组件中我们可以这样去提交这个值")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(' this.$store.commit("SET_KEYWORD", msg);\n')])])]),a("p",[t._v("或者")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("this.\\$store.commit({\n  type: 'SET_KEYWORD',\n  keyword: msg\n})\n")])])]),a("h3",{attrs:{id:"_5-index-部分代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-index-部分代码"}},[t._v("#")]),t._v(" 5：index 部分代码")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("import Vue from 'vue';\nimport Vuex from 'vuex';\nimport getters from './getters';\nimport mutations from './mutations';\nimport actions from './action';\nimport state from './state';\n\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state,\n  getters,\n  actions,\n  mutations,\n})\n")])])]),a("blockquote",[a("p",[t._v("最后：讲的比较通俗，如需更系统全面的文档，可查看(vuex 文档)\n"),a("a",{attrs:{href:"https://vuex.vuejs.org/zh-cn/"}},[t._v("https://vuex.vuejs.org/zh-cn/")])])]),t._v(" "),a("comment")],1)}),[],!1,null,null,null);e.default=n.exports}}]);